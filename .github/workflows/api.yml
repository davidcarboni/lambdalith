name: web

on:
  push:
    branches:
      - main
    paths:
    # Build when there are changes in the directory that holds the component,
    # or when this workflow file is changed
    - 'web/**'
    - '.github/workflows/web.yml'
  schedule:
    # A weekly build to pick up updates and security patches for libraries
    - cron: "11 11 * * 1"

jobs:
  deploy:
    name: Lambda
    runs-on: ubuntu-latest
    env:
      component: api
      lambdaName: ${{ vars.API_LAMBDA }}

    steps:

    - uses: actions/checkout@v3

    - uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Build
      working-directory: ./${{ env.component }}
      run: |
        npm ci
        npm run lint
        npm run test
        npm run compile

    - name: Package
      working-directory: ./${{ env.component }}
      run: |
        npm run package

    - name: Update Lambda
      working-directory: ./${{ env.component }}
      run: |
        aws lambda update-function-code --function-name=${{ env.lambdaName }} --zip-file fileb://dist/function.zip

    - name: Notify Slack
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_BUILD }}
        SLACK_USERNAME: MetricPipeline build
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON_EMOJI: ":github_octocat:"
        SLACK_CHANNEL: build

    - name: Dispatch integration tests
      if: success()
      env:
         token: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl -v \
          -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/metricpipeline/metricpipeline/actions/workflows/integration-test.yml/dispatches -d '{"ref":"main","inputs":{"component_name":"web"}}'
